@page "/fetchdata"
@using BlazorApp.Shared
@inject HttpClient Http


@if (definitions == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <MudContainer Class="mt-16">
    
        <MudGrid Class="mt-8">

            @foreach (var definition in definitions)
            {

                <MudItem xs="12" sm="6" md="4">
                    <MudCard Elevation="25" Class="rounded-lg pb-4">
                        <MudCardHeader>
                            <CardHeaderContent>
                                <MudText Typo="Typo.h5" Align="Align.Center">@definition.Word</MudText>
                                <MudText Typo="Typo.caption">@definition.Abbreviation</MudText>
                            </CardHeaderContent>
                        </MudCardHeader>
                        <MudCardContent>
                            <MudText Typo="Typo.body2" Align="Align.Center">@definition.Content</MudText>
                            <MudDivider DividerType="DividerType.Middle" Class="my-6"/>
                     
                            <MudChip Variant="Variant.Text" Color="Color.Primary" Size="Size.Small">@definition.Tag</MudChip>
                           
                        </MudCardContent>
                        <MudCardActions Class="d-flex justify-center">
                            <MudButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Large" Style="width:50%;" Href="@definition.LearnMoreUrl">Learn More</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
            }
        </MudGrid>
    </MudContainer>
}

@code {
    private Definition[] definitions = new Definition[] { };

    protected override async Task OnInitializedAsync()
    {
        try
        {
            definitions = await Http.GetFromJsonAsync<Definition[]>("/api/definitions") ?? new Definition[] { };
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }
    }
}
